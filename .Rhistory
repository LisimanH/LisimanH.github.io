summarize_all(sum) %>%
pivot_longer(
everything(),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name,label)
) %>%
separate(
label,
into = c(NA, NA, "income"),
sep = "!!"
) %>%
select(-name) %>%
filter(!is.na(income))%>%
mutate(race = race_categories[x])
})
race_categotires <- c(
"White alone",
"Black or African American alone",
"American Indian and Alaska Native alone",
"Asian alone",
"Native Hawaiian and Other Pacific Islander alone",
"Some Other Race alone",
"Two or more Races"
)
bay_income_race_2019 <-
1:7 %>%
map_dfr(function(x){
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "county:001,013,041,055,075,081,085,095,097",
regionin = "state:06",
vars = paste0("group(B19001",LETTERS[x],")")
) %>%
select(
ends_with("E")&-c(state, NAME)
) %>%
summarize_all(sum) %>%
pivot_longer(
everything(),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name,label)
) %>%
separate(
label,
into = c(NA, NA, "income"),
sep = "!!"
) %>%
select(-name) %>%
filter(!is.na(income))%>%
mutate(race = race_categories[x])
})
race_categories <- c(
"White alone",
"Black or African American alone",
"American Indian and Alaska Native alone",
"Asian alone",
"Native Hawaiian and Other Pacific Islander alone",
"Some Other Race alone",
"Two or more Races"
)
bay_income_race_2019 <-
1:7 %>%
map_dfr(function(x){
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "county:001,013,041,055,075,081,085,095,097",
regionin = "state:06",
vars = paste0("group(B19001",LETTERS[x],")")
) %>%
select(
ends_with("E")&-c(state, NAME)
) %>%
summarize_all(sum) %>%
pivot_longer(
everything(),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name,label)
) %>%
separate(
label,
into = c(NA, NA, "income"),
sep = "!!"
) %>%
select(-name) %>%
filter(!is.na(income))%>%
mutate(race = race_categories[x])
})
View(bay_income_race_2019)
knitr::opts_chunk$set(echo = F, warning = F, message = F)
library(tidyverse)
library(censusapi)
library(sf)
library(tigris)
library(mapview)
library(readxl)
temp <- tempfile()
download.file("https://oehha.ca.gov/media/downloads/calenviroscreen/document/calenviroscreen40resultsdatadictionaryf2021.zip",destfile = temp)
ces4 <- read_excel(
unzip(
temp,
"calenviroscreen40resultsdatadictionary_F_2021.xlsx"
),
sheet = "CES4.0FINAL_results"
)
library(tidyverse)
library(censusapi)
library(sf)
library(tigris)
library(mapview)
library(readxl)
temp <- tempfile()
download.file("https://oehha.ca.gov/media/downloads/calenviroscreen/document/calenviroscreen40resultsdatadictionaryf2021.zip",destfile = temp)
ces4 <- read_excel(
unzip(
temp,
"calenviroscreen40resultsdatadictionary_F_2021.xlsx"
),
sheet = "CES4.0FINAL_results"
)
setwd("~/Documents/GitHub/LisimanHua.github.io")
library(tidyverse)
library(censusapi)
library(sf)
library(tigris)
library(mapview)
library(readxl)
temp <- tempfile()
download.file("https://oehha.ca.gov/media/downloads/calenviroscreen/document/calenviroscreen40resultsdatadictionaryf2021.zip",destfile = temp)
ces4 <- read_excel(
unzip(
temp,
"calenviroscreen40resultsdatadictionary_F_2021.xlsx"
),
sheet = "CES4.0FINAL_results"
)
library(tidyverse)
library(censusapi)
library(sf)
library(tigris)
library(mapview)
library(readxl)
temp <- tempfile()
download.file("https://oehha.ca.gov/media/downloads/calenviroscreen/document/calenviroscreen40resultsdatadictionaryf2021.zip",destfile = temp)
ces4 <- read_excel(
unzip(
temp,
"calenviroscreen40resultsdatadictionary_F_2021.xlsx"
),
sheet = "CES4.0FINAL_results"
)
library(tidyverse)
library(censusapi)
library(sf)
library(tigris)
library(mapview)
library(readxl)
temp <- tempfile()
download.file("https://oehha.ca.gov/media/downloads/calenviroscreen/document/calenviroscreen40resultsdatadictionaryf2021.zip",destfile = temp)
ces4 <- read_excel(
unzip(
temp,
"calenviroscreen40resultsdatadictionary_F_2021.xlsx"
),
sheet = "CES4.0FINAL_results"
)
library(tidyverse)
library(censusapi)
library(sf)
library(tigris)
library(mapview)
library(readxl)
temp <- tempfile()
download.file("https://oehha.ca.gov/media/downloads/calenviroscreen/document/calenviroscreen40resultsdatadictionaryf2021.zip",destfile = temp)
# for Mac Users, put the xlsx file in your working directory
ces4 <- read_excel("calenviroscreen40resultsdatadictionary_F_2021.xlsx")
colnames(ces4)
ces4_clean <- ces4 %>%
dplyr::select(!ends_with("Pctl"))
sum(is.na(ces4_clean$Poverty))
ces4_clean %>%
# .$Poverty %>%
pull(Poverty) %>%
is.na() %>%
sum()
ca_tracts <- tracts("CA")
ces4_map <- ces4_clean %>%
left_join(
ca_tracts %>%
transmute(GEOID = GEOID %>% as.numeric()),
by = c("Census Tract" = "GEOID")
) %>%
st_as_sf()
mapview(ces4_map, zcol = "Asthma")
View(ces4)
View(ca_tracts)
View(ces4_map)
mapview(ces4_map, zcol = "PM2.5")
ggplot(
data = ces4_map,
aes(
x = PM2.5,
y = Asthma
)
) +
geom_point() +
geom_smooth(method = "lm")
ggplot(
data = ces4_map,
aes(
x = PM2.5,
y = Asthma
)
) +
geom_point() +
geom_smooth(method = "lm")
model <- lm(Asthma~PM2.5, data = ces4_map)
summary(model)
get_sumsq_residuals <- function(x){
slope <- x[1]
yintercept <- x[2]
best_fit_candidate <- slope * ces4_map$PM2.5 + yintercept
residuals <- bay_education_income_tract$Asthma - best_fit_candidate
sumsq_residuals <- sum(residuals^2)
}
plot(density(residuals(model)))
get_sumsq_residuals <- function(x){
slope <- x[1]
yintercept <- x[2]
best_fit_candidate <- slope * ces4_map$PM2.5 + yintercept
residuals <- ces4_map$Asthma - best_fit_candidate
sumsq_residuals <- sum(residuals^2)
}
optimization <- optim(c(0,0), get_sumsq_residuals)
log_model <-lm(log(Asthma)~PM2.5, data = ces4_map)
summary(log_model)
ggplot(
data = ces4_map,
aes(
x = PM2.5,
y = log(Asthma)
)
) +
geom_point() +
geom_smooth(method = "lm")
plot(density(residuals(log_model)))
residuals(log_model)
res<-residuals(log_model)
res<-data.frame(residuals(log_model))
View(res)
res<-data.frame(residuals(log_model))
res_ces4_map %>% ces4_map
res<-data.frame(residuals(log_model))
res_ces4_map<- ces4_map %>%
merge(res)
res<-data.frame(residuals(log_model))
mapview(ces4_map, zcol = res)
res<-data.frame(residuals(log_model))
mapview(ces4_map, zcol = residuals(log_model))
pm25_pal <- colorNumeric(
palette = "Reds",
domain = ces4_map$PM2.5
)
library(leaflet)
pm25_pal <- colorNumeric(
palette = "Reds",
domain = ces4_map$PM2.5
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = ces4_map,
fillColor = ~pm25_pal(PM2.5),
color = "white",
weight = 0.5,
fillOpacity = 0.5,
label = ~PM2.5
)
asthma_pal <- colorNumeric(
palette = "Blues",
domain = ces4_map$Asthma
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = ces4_map,
fillColor = ~asthma_pal(Asthma),
color = "white",
weight = 0.5,
fillOpacity = 0.5,
label = ~Asthma
)
ggplot(
data = ces4_map,
aes(
x = PM2.5,
y = Asthma
)
) +
geom_point() +
geom_smooth(method = "lm")
model <- lm(Asthma~PM2.5, data = ces4_map)
summary(model)
plot(density(residuals(model)))
plot(density(residuals(log_model)))
log_model <-lm(log(Asthma)~PM2.5, data = ces4_map)
summary(log_model)
res_pal <- colorNumeric(
palette = "Reds",
domain = residuals(log_model)
)
res_pal <- colorNumeric(
palette = "Reds",
domain = residuals(log_model)
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = ces4_map,
fillColor = ~res_pal(residuals(log_model)),
color = "white",
weight = 0.5,
fillOpacity = 0.5,
label = ~residuals(log_model)
)
res_pal <- colorNumeric(
palette = "RdBu",
domain = residuals(log_model)
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = ces4_map,
fillColor = ~res_pal(residuals(log_model)),
color = "white",
weight = 0.5,
fillOpacity = 0.5,
label = ~residuals(log_model)
)
res_pal <- colorNumeric(
palette = "BuRd",
domain = residuals(log_model)
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = ces4_map,
fillColor = ~res_pal(residuals(log_model)),
color = "white",
weight = 0.5,
fillOpacity = 0.5,
label = ~residuals(log_model)
)
res_pal <- colorNumeric(
palette = "RdBu",
domain = residuals(log_model)
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = ces4_map,
fillColor = ~res_pal(residuals(log_model)),
color = "white",
weight = 0.5,
fillOpacity = 0.5,
label = ~residuals(log_model)
)
ces4_clean <- ces4 %>%
dplyr::select(!ends_with("Pctl")) %>%
filter('California Country'=="Santa Clara")
sum(is.na(ces4_clean$Poverty))
ces4_clean %>%
# .$Poverty %>%
pull(Poverty) %>%
is.na() %>%
sum()
ca_tracts <- tracts("CA")
ces4_map <- ces4_clean %>%
left_join(
ca_tracts %>%
transmute(GEOID = GEOID %>% as.numeric()),
by = c("Census Tract" = "GEOID")
) %>%
st_as_sf()
View(ces4_map)
View(ces4_clean)
ces4_clean <- ces4 %>%
dplyr::select(!ends_with("Pctl")) %>%
filter('California County'=="Santa Clara")
ces4 <- read_excel("calenviroscreen40resultsdatadictionary_F_2021.xlsx")
ces4_clean <- ces4 %>%
dplyr::select(!ends_with("Pctl")) %>%
filter('California County'=="Santa Clara")
sum(is.na(ces4_clean$Poverty))
ces4_clean %>%
# .$Poverty %>%
pull(Poverty) %>%
is.na() %>%
sum()
ca_tracts <- tracts("CA")
ces4_map <- ces4_clean %>%
left_join(
ca_tracts %>%
transmute(GEOID = GEOID %>% as.numeric()),
by = c("Census Tract" = "GEOID")
) %>%
st_as_sf()
View(ces4)
ces4_clean <- ces4 %>%
dplyr::select(!ends_with("Pctl")) %>%
filter('California County'=="Santa Clara")
ces4_clean <- ces4 %>%
dplyr::select(!ends_with("Pctl"))
View(ces4_clean)
colnames(ces4)
ces4_clean <- ces4 %>%
dplyr::select(!ends_with("Pctl")) %>%
filter(`California County`=="Santa Clara")
sum(is.na(ces4_clean$Poverty))
ces4_clean %>%
# .$Poverty %>%
pull(Poverty) %>%
is.na() %>%
sum()
ca_tracts <- tracts("CA")
ces4_map <- ces4_clean %>%
left_join(
ca_tracts %>%
transmute(GEOID = GEOID %>% as.numeric()),
by = c("Census Tract" = "GEOID")
) %>%
st_as_sf()
pm25_pal <- colorNumeric(
palette = "Reds",
domain = ces4_map$PM2.5
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = ces4_map,
fillColor = ~pm25_pal(PM2.5),
color = "white",
weight = 0.5,
fillOpacity = 0.5,
label = ~PM2.5
)
asthma_pal <- colorNumeric(
palette = "Blues",
domain = ces4_map$Asthma
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = ces4_map,
fillColor = ~asthma_pal(Asthma),
color = "white",
weight = 0.5,
fillOpacity = 0.5,
label = ~Asthma
)
ggplot(
data = ces4_map,
aes(
x = PM2.5,
y = Asthma
)
) +
geom_point() +
geom_smooth(method = "lm")
View(ces4_map)
model <- lm(Asthma~PM2.5, data = ces4_map)
summary(model)
plot(density(residuals(model)))
ggplot(
data = ces4_map,
aes(
x = PM2.5,
y = log(Asthma)
)
) +
geom_point() +
geom_smooth(method = "lm")
log_model <-lm(log(Asthma)~PM2.5, data = ces4_map)
summary(log_model)
plot(density(residuals(log_model)))
res_pal <- colorNumeric(
palette = "RdBu",
domain = residuals(log_model)
)
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
data = ces4_map,
fillColor = ~res_pal(residuals(log_model)),
color = "white",
weight = 0.5,
fillOpacity = 0.5,
label = ~residuals(log_model)
)
